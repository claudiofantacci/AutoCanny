matrix:
    include:
        # Linux Trusty builds
        - os: linux
          dist: trusty
          sudo: required
          language: cpp
          compiler: gcc
          env: TRAVIS_BUILD_TYPE=Debug

        - os: linux
          dist: trusty
          sudo: required
          language: cpp
          compiler: gcc
          env: TRAVIS_BUILD_TYPE=Release

        - os: linux
          dist: trusty
          sudo: required
          language: cpp
          compiler: clang
          env: TRAVIS_BUILD_TYPE=Debug

        - os: linux
          dist: trusty
          sudo: required
          language: cpp
          compiler: clang
          env: TRAVIS_BUILD_TYPE=Release

        # Xcode7.3 builds (El Capitan 10.11)
        - os: osx
          osx_image: xcode7.3
          sudo: required
          language: cpp
          compiler: clang
          env: TRAVIS_BUILD_TYPE=Debug

        - os: osx
          osx_image: xcode7.3
          sudo: required
          language: cpp
          compiler: clang
          env: TRAVIS_BUILD_TYPE=Release

        - os: osx
          osx_image: xcode7.3
          sudo: required
          language: cpp
          compiler: gcc
          env: TRAVIS_BUILD_TYPE=Debug

        - os: osx
          osx_image: xcode7.3
          sudo: required
          language: cpp
          compiler: gcc
          env: TRAVIS_BUILD_TYPE=Release

        # Xcode8.2 builds (Sierra 10.12)
        - os: osx
          osx_image: xcode8.2
          sudo: required
          language: cpp
          compiler: clang
          env: TRAVIS_BUILD_TYPE=Debug

        - os: osx
          osx_image: xcode8.2
          sudo: required
          language: cpp
          compiler: clang
          env: TRAVIS_BUILD_TYPE=Release

        - os: osx
          osx_image: xcode8.2
          sudo: required
          language: cpp
          compiler: gcc
          env: TRAVIS_BUILD_TYPE=Debug

        - os: osx
          osx_image: xcode8.2
          sudo: required
          language: cpp
          compiler: gcc
          env: TRAVIS_BUILD_TYPE=Release

cache:
    ccache: true

# Travis CI build lifecycle
before_install:
    # Update package managers
    - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get -qq update;  fi
    - if [ "$TRAVIS_OS_NAME" == "osx"   ]; then brew update;              fi

    # Use ccache also for clang and clang++ on linux
    - if [ "$TRAVIS_OS_NAME" == "linux" ]; then if [ "$CC" == "clang" ];    then sudo ln -s ../../bin/ccache /usr/lib/ccache/clang;   fi; fi
    - if [ "$TRAVIS_OS_NAME" == "linux" ]; then if [ "$CC" == "clang" ];    then export CFLAGS="-Qunused-arguments";                  fi; fi
    - if [ "$TRAVIS_OS_NAME" == "linux" ]; then if [ "$CXX" == "clang++" ]; then sudo ln -s ../../bin/ccache /usr/lib/ccache/clang++; fi; fi
    - if [ "$TRAVIS_OS_NAME" == "linux" ]; then if [ "$CXX" == "clang++" ]; then export CXXFLAGS="-Qunused-arguments";                fi; fi

    # Install ccache on osx
    - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install ccache;                               fi
    - if [ "$TRAVIS_OS_NAME" == "osx" ]; then export PATH="/usr/local/opt/ccache/libexec:$PATH"; fi

    # Install dependency: OpenCV
    - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew tap homebrew/science;                         fi
    - if [ "$TRAVIS_OS_NAME" == "osx" ]; then /usr/bin/yes | pip uninstall numpy || true;        fi
    - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install opencv3;                              fi
    - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew link --force opencv3;                         fi

    # Print some more system information after installing all build tools
    - echo "-------------------- BEGIN SYSTEM INFORMATION --------------------"
    - uname -a
    - if [ "$TRAVIS_OS_NAME" == "linux" ]; then lsb_release -a;                     fi
    - if [ "$TRAVIS_OS_NAME" == "osx" ];   then system_profiler SPSoftwareDataType; fi
    - env
    - which cmake
    - cmake --version
    - which $CC
    - $CC --version
    - which $CXX
    - $CXX --version
    - which ccache
    - ccache --version
    - ccache -s
    - echo "--------------------  END SYSTEM INFORMATION  --------------------"

before_script:
    # Run CMake
    - mkdir build
    - cd build
    - cmake -DBUILD_TESTING:BOOL=ON -DCMAKE_BUILD_TYPE=${TRAVIS_BUILD_TYPE} ..

script:
    - make
    - make test
